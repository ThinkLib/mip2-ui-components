{"version":3,"sources":["../../../src/components/Vuetify/index.ts"],"names":[],"mappings":"AAAA,OAAO,WAAP,MAAwB,sBAAxB;AACA,OAAO,UAAP,MAAuB,qBAAvB;AACA,OAAO,KAAP,MAAkB,gBAAlB;AACA,OAAO,KAAP,MAAkB,gBAAlB;AACA,OAAO,OAAP,MAAoB,kBAApB;AACA,OAAO,OAAP,MAAoB,eAApB;AACA,SAAS,WAAT,QAA4B,oBAA5B;AACA,OAAO,IAAP,MAAiB,aAAjB;AAIA,MAAM,UAAyB;AAC7B,YAAS,GAAT,EAAc,OAAO,EAArB,EAAuB;AACrB,YAAK,KAAa,SAAlB,EAA6B;AAE5B,aAAa,SAAb,GAAyB,IAAzB;AAED,wBAAgB,GAAhB;AAEA,cAAM,OAAO,QAAQ,KAAK,IAAb,CAAb;AAEA,YAAI,SAAJ,CAAc,QAAd,GAAyB,IAAI,GAAJ,CAAQ;AAC/B,oBAAQ,CACN,UADM,CADuB;AAI/B,kBAAM;AACJ,2BADI;AAEJ,sBAAM,KAFF;AAGJ,uBAAO,MAAM,KAAK,QAAX,EAAqB,KAAK,KAA1B,CAHH;AAIJ,oBAJI;AAKJ,yBAAS,QAAQ,KAAK,OAAb,CALL;AAMJ,qBAAK,KAAK,GANN;AAOJ,uBAAO,MAAM,KAAK,KAAX;AAPH,aAJyB;AAa/B,qBAAS;AACP,oBADO;AAEP,mBAAG,KAAK,CAAL,CAAO,IAAP,CAAY,IAAZ;AAFI;AAbsB,SAAR,CAAzB;AAmBA,YAAI,KAAK,WAAT,EAAsB;AACpB,mBAAO,MAAP,CAAc,KAAK,WAAnB,EAAgC,OAAhC,CAAwC,cAAa;AACnD,oBAAI,WAAW,IAAX,KAAoB,SAApB,IAAiC,WAAW,IAAX,CAAgB,UAAhB,CAA2B,IAA3B,CAArC,EAAuE;AACrE,wBAAI,SAAJ,CAAc,WAAW,IAAzB,EAA+B,UAA/B;AACD;AACF,aAJD;AAKD;AAED,YAAI,KAAK,UAAT,EAAqB;AACnB,mBAAO,MAAP,CAAc,KAAK,UAAnB,EAA+B,OAA/B,CAAuC,aAAY;AACjD,oBAAI,SAAJ,CAAc,UAAU,IAAxB,EAA8B,SAA9B;AACD,aAFD;AAGD;AAED,YAAI,KAAK,UAAT,EAAqB;AACnB,mBAAO,MAAP,CAAc,KAAK,UAAnB,EAA+B,OAA/B,CAAuC,aAAY;AACjD,oBAAI,GAAJ,CAAQ,SAAR;AACD,aAFD;AAGD;AACF,KAhD4B;AAiD7B;AAjD6B,CAA/B;AAoDA,OAAM,SAAA,eAAA,CAA2B,GAA3B,EAAgD,WAAhD,EAAoE;AACxE,UAAM,SAAS,wBAAf;AAEA,UAAM,WAAW,OAAO,KAAP,CAAa,GAAb,EAAkB,CAAlB,EAAqB,GAArB,CAAyB,KAAK,EAAE,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAA9B,EAAoD,GAApD,CAAwD,MAAxD,CAAjB;AACA,UAAM,SAAS,IAAI,OAAJ,CAAY,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,EAA0B,GAA1B,CAA8B,KAAK,SAAS,CAAT,EAAY,EAAZ,CAAnC,CAAf;AAEA;AACA,UAAM,SACJ,OAAO,CAAP,MAAc,SAAS,CAAT,CAAd,MAA6B;AAC5B,WAAO,CAAP,IAAY,SAAS,CAAT,CAAZ,IAA2B;AACzB,WAAO,CAAP,MAAc,SAAS,CAAT,CAAd,IAA6B,OAAO,CAAP,KAAa,SAAS,CAAT,CAF7C,CAE0D;AAF1D,KADF;AAMA,QAAI,CAAC,MAAL,EAAa;AACX,oBAAY,gCAAgC,MAAM,EAAlD;AACD;AACF;AAED,eAAe,OAAf","sourcesContent":["import application from './mixins/application'\nimport breakpoint from './mixins/breakpoint'\nimport theme from './mixins/theme'\nimport icons from './mixins/icons'\nimport options from './mixins/options'\nimport genLang from './mixins/lang'\nimport { consoleWarn } from '../../util/console'\nimport goTo from './util/goTo'\nimport { VueConstructor } from 'vue/types'\nimport { Vuetify as VuetifyPlugin } from 'types'\n\nconst Vuetify: VuetifyPlugin = {\n  install (Vue, opts = {}) {\n    if ((this as any).installed) return\n\n    (this as any).installed = true\n\n    checkVueVersion(Vue)\n\n    const lang = genLang(opts.lang)\n\n    Vue.prototype.$vuetify = new Vue({\n      mixins: [\n        breakpoint\n      ],\n      data: {\n        application,\n        dark: false,\n        icons: icons(opts.iconfont, opts.icons),\n        lang,\n        options: options(opts.options),\n        rtl: opts.rtl,\n        theme: theme(opts.theme)\n      },\n      methods: {\n        goTo,\n        t: lang.t.bind(lang)\n      }\n    })\n\n    if (opts.transitions) {\n      Object.values(opts.transitions).forEach(transition => {\n        if (transition.name !== undefined && transition.name.startsWith('v-')) {\n          Vue.component(transition.name, transition)\n        }\n      })\n    }\n\n    if (opts.directives) {\n      Object.values(opts.directives).forEach(directive => {\n        Vue.directive(directive.name, directive)\n      })\n    }\n\n    if (opts.components) {\n      Object.values(opts.components).forEach(component => {\n        Vue.use(component)\n      })\n    }\n  },\n  version: __VUETIFY_VERSION__\n}\n\nexport function checkVueVersion (Vue: VueConstructor, requiredVue?: string) {\n  const vueDep = requiredVue || __REQUIRED_VUE__\n\n  const required = vueDep.split('.', 3).map(v => v.replace(/\\D/g, '')).map(Number)\n  const actual = Vue.version.split('.', 3).map(n => parseInt(n, 10))\n\n  // Simple semver caret range comparison\n  const passes =\n    actual[0] === required[0] && // major matches\n    (actual[1] > required[1] || // minor is greater\n      (actual[1] === required[1] && actual[2] >= required[2]) // or minor is eq and patch is >=\n    )\n\n  if (!passes) {\n    consoleWarn(`Vuetify requires Vue version ${vueDep}`)\n  }\n}\n\nexport default Vuetify\n"],"sourceRoot":""}