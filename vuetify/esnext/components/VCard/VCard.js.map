{"version":3,"sources":["../../../src/components/VCard/VCard.ts"],"names":[],"mappings":"AAAA,OAAO,4CAAP;AAEA;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,QAAP,MAAqB,uBAArB;AACA,OAAO,SAAP,MAAsB,wBAAtB;AAEA;AACA,SAAS,aAAT,QAA8B,oBAA9B;AACA,OAAO,MAAP,MAAmB,mBAAnB;AAKA;AACA,eAAe,OAAO,SAAP,EAAkB,QAAlB,EAA4B,SAA5B,EAAuC,MAAvC,CAA8C;AAC3D,UAAM,QADqD;AAG3D,WAAO;AACL,cAAM,OADD;AAEL,gBAAQ,CAAC,MAAD,EAAS,MAAT,CAFH;AAGL,eAAO,OAHF;AAIL,aAAK,MAJA;AAKL,gBAAQ,OALH;AAML,aAAK;AACH,kBAAM,MADH;AAEH,qBAAS;AAFN,SANA;AAUL,cAAM,OAVD;AAWL,eAAO,CAAC,MAAD,EAAS,MAAT;AAXF,KAHoD;AAiB3D,cAAU;AACR,kBAAO;AACL,mBAAO,KAAK,6BAAL,CAAmC;AACxC,0BAAU,IAD8B;AAExC,gCAAgB,KAAK,IAFmB;AAGxC,iCAAiB,KAAK,KAHkB;AAIxC,kCAAkB,KAAK,MAJiB;AAKxC,gCAAgB,KAAK,IALmB;AAMxC,gCAAgB,KAAK,KANmB;AAOxC,+BAAe,KAAK;AAPoB,aAAnC,CAAP;AASD,SAXO;AAYR,iBAAM;AACJ,kBAAM,QAA6B;AACjC,wBAAQ,cAAc,KAAK,MAAnB;AADyB,aAAnC;AAIA,gBAAI,KAAK,GAAT,EAAc;AACZ,sBAAM,UAAN,GAAmB,QAAQ,KAAK,GAAG,oCAAnC;AACD;AAED,gBAAI,KAAK,KAAT,EAAgB;AACd,sBAAM,KAAN,GAAc,cAAc,KAAK,KAAnB,CAAd;AACD;AAED,mBAAO,KAAP;AACD;AA1BO,KAjBiD;AA8C3D,WAAQ,CAAR,EAAS;AACP,cAAM,EAAE,GAAF,EAAO,IAAP,KAAgB,KAAK,iBAAL,EAAtB;AAEA,aAAK,KAAL,GAAa,KAAK,MAAlB;AAEA,eAAO,EAAE,GAAF,EAAO,IAAP,EAAa,KAAK,MAAL,CAAY,OAAzB,CAAP;AACD;AApD0D,CAA9C,CAAf","sourcesContent":["import '../../stylus/components/_cards.styl'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(Colorable, Routable, Themeable).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    height: [Number, String],\n    hover: Boolean,\n    img: String,\n    raised: Boolean,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    tile: Boolean,\n    width: [String, Number]\n  },\n\n  computed: {\n    classes (): object {\n      return this.addBackgroundColorClassChecks({\n        'v-card': true,\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--raised': this.raised,\n        'v-card--tile': this.tile,\n        'theme--light': this.light,\n        'theme--dark': this.dark\n      })\n    },\n    styles (): object {\n      const style: Record<string, any> = {\n        height: convertToUnit(this.height)\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      if (this.width) {\n        style.width = convertToUnit(this.width)\n      }\n\n      return style\n    }\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    return h(tag, data, this.$slots.default)\n  }\n})\n"],"sourceRoot":""}