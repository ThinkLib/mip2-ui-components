{"version":3,"sources":["../../../../src/components/VTabs/mixins/tabs-computed.js"],"names":[],"mappings":";;;;;AAKA;AACA,eAAe;AACb,cAAU;AACR,sBAAW;AACT,mBAAO,KAAK,IAAL,CAAU,SAAV,CAAoB,CAAC,GAAD,EAAM,KAAN,KAAe;AACxC,sBAAM,KAAK,IAAI,MAAJ,KAAe,GAAf,GAAqB,KAArB,GAA6B,IAAI,MAA5C;AACA,uBAAO,OAAO,KAAK,SAAnB;AACD,aAHM,CAAP;AAID,SANO;AAOR,oBAAS;AACP,gBAAI,CAAC,KAAK,IAAL,CAAU,MAAf,EAAuB,OAAO,SAAP;AAEvB,mBAAO,KAAK,IAAL,CAAU,KAAK,WAAf,CAAP;AACD,SAXO;AAYR,0BAAe;AACb,mBAAO,KAAK,MAAL,GAAc;AACnB,wBAAQ,GAAG,SAAS,KAAK,MAAd,EAAsB,EAAtB,CAAyB;AADjB,aAAd,GAEH,IAFJ;AAGD,SAhBO;AAiBR,oBAAS;AACP,mBAAO,CAAC,KAAK,UAAL,IAAmB,CAAC,KAAK,QAA1B,KAAuC,KAAK,aAAnD;AACD,SAnBO;AAoBR,oBAAY;AACV,kBAAG;AACD,uBAAO,KAAK,SAAZ;AACD,aAHS;AAIV,gBAAK,GAAL,EAAQ;AACN,oBAAI,KAAK,UAAL,KAAoB,GAAxB,EAA6B;AAE7B,qBAAK,SAAL,GAAiB,GAAjB;AACA,qBAAK,KAAL,CAAW,OAAX,EAAoB,GAApB;AACD;AATS,SApBJ;AA+BR,mBAAQ;AACN,mBAAO,KAAK,QAAL,CAAc,UAAd,CAAyB,KAAzB,GAAiC,KAAK,gBAA7C;AACD,SAjCO;AAkCR,uBAAY;AACV,mBAAO;AACL,sBAAM,GAAG,KAAK,UAAU,IADnB;AAEL,4BAAY,KAAK,UAAL,IAAmB,IAAnB,GAA0B,IAA1B,GAAiC,MAFxC;AAGL,uBAAO,GAAG,KAAK,WAAW;AAHrB,aAAP;AAKD,SAxCO;AAyCR,iBAAM;AACJ,mBAAO,KAAK,SAAL,GACH,KAAK,SAAL,CAAe,MADZ,GAEH,IAFJ;AAGD;AA7CO;AADG,CAAf","sourcesContent":["/**\n * Tabs computed\n *\n * @mixin\n */\n/* @vue/component */\nexport default {\n  computed: {\n    activeIndex () {\n      return this.tabs.findIndex((tab, index) => {\n        const id = tab.action === tab ? index : tab.action\n        return id === this.lazyValue\n      })\n    },\n    activeTab () {\n      if (!this.tabs.length) return undefined\n\n      return this.tabs[this.activeIndex]\n    },\n    containerStyles () {\n      return this.height ? {\n        height: `${parseInt(this.height, 10)}px`\n      } : null\n    },\n    hasArrows () {\n      return (this.showArrows || !this.isMobile) && this.isOverflowing\n    },\n    inputValue: {\n      get () {\n        return this.lazyValue\n      },\n      set (val) {\n        if (this.inputValue === val) return\n\n        this.lazyValue = val\n        this.$emit('input', val)\n      }\n    },\n    isMobile () {\n      return this.$vuetify.breakpoint.width < this.mobileBreakPoint\n    },\n    sliderStyles () {\n      return {\n        left: `${this.sliderLeft}px`,\n        transition: this.sliderLeft != null ? null : 'none',\n        width: `${this.sliderWidth}px`\n      }\n    },\n    target () {\n      return this.activeTab\n        ? this.activeTab.action\n        : null\n    }\n  }\n}\n"],"sourceRoot":""}