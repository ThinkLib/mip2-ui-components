{"version":3,"sources":["../../../src/components/VSpeedDial/VSpeedDial.js"],"names":[],"mappings":"AAAA,OAAO,iDAAP;AAEA,OAAO,UAAP,MAAuB,yBAAvB;AACA,OAAO,YAAP,MAAyB,2BAAzB;AACA,OAAO,cAAP,MAA2B,6BAA3B;AAEA,OAAO,YAAP,MAAyB,gCAAzB;AAEA;AACA,eAAe;AACb,UAAM,cADO;AAGb,gBAAY,EAAE,YAAF,EAHC;AAKb,YAAQ,CAAC,YAAD,EAAe,UAAf,EAA2B,cAA3B,CALK;AAOb,WAAO;AACL,mBAAW;AACT,kBAAM,MADG;AAET,qBAAS,KAFA;AAGT,uBAAW,OAAM;AACf,uBAAO,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,QAAnC,CAA4C,GAA5C,CAAP;AACD;AALQ,SADN;AAQL,qBAAa,OARR;AASL,oBAAY;AACV,kBAAM,MADI;AAEV,qBAAS;AAFC;AATP,KAPM;AAsBb,cAAU;AACR,kBAAO;AACL,mBAAO;AACL,gCAAgB,IADX;AAEL,qCAAqB,KAAK,GAFrB;AAGL,uCAAuB,KAAK,KAHvB;AAIL,wCAAwB,KAAK,MAJxB;AAKL,sCAAsB,KAAK,IALtB;AAML,0CAA0B,KAAK,QAN1B;AAOL,uCAAuB,KAAK,KAPvB;AAQL,iBAAC,2BAA2B,KAAK,SAAS,EAA1C,GAA+C;AAR1C,aAAP;AAUD;AAZO,KAtBG;AAqCb,WAAQ,CAAR,EAAS;AACP,YAAI,WAAW,EAAf;AACA,cAAM,OAAO;AACX,qBAAS,KAAK,OADH;AAEX,wBAAY,CAAC;AACX,sBAAM,eADK;AAEX,uBAAO,MAAO,KAAK,QAAL,GAAgB;AAFnB,aAAD,CAFD;AAMX,gBAAI;AACF,uBAAO,MAAO,KAAK,QAAL,GAAgB,CAAC,KAAK;AADlC;AANO,SAAb;AAWA,YAAI,KAAK,WAAT,EAAsB;AACpB,iBAAK,EAAL,CAAQ,UAAR,GAAqB,MAAO,KAAK,QAAL,GAAgB,IAA5C;AACA,iBAAK,EAAL,CAAQ,UAAR,GAAqB,MAAO,KAAK,QAAL,GAAgB,KAA5C;AACD;AAED,YAAI,KAAK,QAAT,EAAmB;AACjB,uBAAW,CAAC,KAAK,MAAL,CAAY,OAAZ,IAAuB,EAAxB,EAA4B,GAA5B,CAAgC,CAAC,CAAD,EAAI,CAAJ,KAAS;AAClD,kBAAE,GAAF,GAAQ,CAAR;AAEA,uBAAO,CAAP;AACD,aAJU,CAAX;AAKD;AAED,cAAM,OAAO,EAAE,kBAAF,EAAsB;AACjC,qBAAS,oBADwB;AAEjC,mBAAO;AACL,sBAAM,KAAK,UADN;AAEL,sBAAM,KAAK,IAFN;AAGL,wBAAQ,KAAK,MAHR;AAIL,qBAAK;AAJA;AAF0B,SAAtB,EAQV,QARU,CAAb;AAUA,eAAO,EAAE,KAAF,EAAS,IAAT,EAAe,CAAC,KAAK,MAAL,CAAY,SAAb,EAAwB,IAAxB,CAAf,CAAP;AACD;AA1EY,CAAf","sourcesContent":["import '../../stylus/components/_speed-dial.styl'\n\nimport Toggleable from '../../mixins/toggleable'\nimport Positionable from '../../mixins/positionable'\nimport Transitionable from '../../mixins/transitionable'\n\nimport ClickOutside from '../../directives/click-outside'\n\n/* @vue/component */\nexport default {\n  name: 'v-speed-dial',\n\n  directives: { ClickOutside },\n\n  mixins: [Positionable, Toggleable, Transitionable],\n\n  props: {\n    direction: {\n      type: String,\n      default: 'top',\n      validator: val => {\n        return ['top', 'right', 'bottom', 'left'].includes(val)\n      }\n    },\n    openOnHover: Boolean,\n    transition: {\n      type: String,\n      default: 'scale-transition'\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        'v-speed-dial': true,\n        'v-speed-dial--top': this.top,\n        'v-speed-dial--right': this.right,\n        'v-speed-dial--bottom': this.bottom,\n        'v-speed-dial--left': this.left,\n        'v-speed-dial--absolute': this.absolute,\n        'v-speed-dial--fixed': this.fixed,\n        [`v-speed-dial--direction-${this.direction}`]: true\n      }\n    }\n  },\n\n  render (h) {\n    let children = []\n    const data = {\n      'class': this.classes,\n      directives: [{\n        name: 'click-outside',\n        value: () => (this.isActive = false)\n      }],\n      on: {\n        click: () => (this.isActive = !this.isActive)\n      }\n    }\n\n    if (this.openOnHover) {\n      data.on.mouseenter = () => (this.isActive = true)\n      data.on.mouseleave = () => (this.isActive = false)\n    }\n\n    if (this.isActive) {\n      children = (this.$slots.default || []).map((b, i) => {\n        b.key = i\n\n        return b\n      })\n    }\n\n    const list = h('transition-group', {\n      'class': 'v-speed-dial__list',\n      props: {\n        name: this.transition,\n        mode: this.mode,\n        origin: this.origin,\n        tag: 'div'\n      }\n    }, children)\n\n    return h('div', data, [this.$slots.activator, list])\n  }\n}\n"],"sourceRoot":""}