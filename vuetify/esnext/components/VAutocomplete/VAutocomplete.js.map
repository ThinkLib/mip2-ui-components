{"version":3,"sources":["../../../src/components/VAutocomplete/VAutocomplete.js"],"names":[],"mappings":";AACA,OAAO,oDAAP;AAEA;AACA,OAAO,OAAP,MAAoB,oBAApB;AACA,OAAO,UAAP,MAAuB,0BAAvB;AAEA;AACA,SAAS,QAAT,QAAyB,oBAAzB;AAEA;AACA,eAAe;AACb,UAAM,gBADO;AAGb,aAAS,OAHI;AAKb,WAAO;AACL,uBAAe;AACb,kBAAM,OADO;AAEb,qBAAS;AAFI,SADV;AAKL,6BAAqB;AACnB,kBAAM,MADa;AAEnB,qBAAS;AAFU,SALhB;AASL,gBAAQ;AACN,kBAAM,QADA;AAEN,qBAAS,CAAC,IAAD,EAAO,SAAP,EAAkB,QAAlB,KAA8B;AACrC,sBAAM,WAAW,OAAO,OAAO,IAAP,GAAc,GAAd,GAAoB,EAA5C;AAEA,sBAAM,OAAO,SAAS,QAAT,CAAb;AACA,sBAAM,QAAQ,SAAS,SAAT,CAAd;AAEA,uBAAO,KAAK,QAAL,GACJ,WADI,GAEJ,OAFI,CAEI,MAAM,QAAN,GAAiB,WAAjB,EAFJ,IAEsC,CAAC,CAF9C;AAGD;AAXK,SATH;AAsBL,oBAAY,OAtBP;AAuBL,kBAAU,OAvBL;AAwBL,iBAAS;AACP,kBAAM,OADC;AAEP,qBAAS;AAFF,SAxBJ;AA4BL,wBAAgB;AACd,kBAAM,OADQ;AAEd,qBAAS;AAFK,SA5BX;AAgCL,qBAAa;AACX,qBAAS;AADE,SAhCR;AAmCL,oBAAY;AACV,kBAAM,CAAC,OAAD,EAAU,MAAV,CADI;AAEV,qBAAS;AAFC;AAnCP,KALM;AA8Cb,UAAM,OAAO;AACX,oBAAY,IADD;AAEX,oBAAY,GAAG;AAFJ,KAAP,CA9CO;AAmDb,cAAU;AACR,kBAAO;AACL,mBAAO,OAAO,MAAP,CAAc,EAAd,EAAkB,QAAQ,QAAR,CAAiB,OAAjB,CAAyB,IAAzB,CAA8B,IAA9B,CAAlB,EAAuD;AAC5D,kCAAkB,IAD0C;AAE5D,sDAAsC,KAAK,aAAL,GAAqB,CAAC;AAFA,aAAvD,CAAP;AAID,SANO;AAOR,wBAAa;AACX,mBAAO,KAAK,aAAZ;AACD,SATO;AAUR,8BAAmB;AACjB,mBAAO,KAAK,YAAL,GACH,KAAK,aAAL,CAAmB,MAAnB,GAA4B,KAAK,aAAL,CAAmB,MAD5C,GAEH,KAAK,aAAL,CAAmB,MAFvB;AAGD,SAdO;AAeR;;;;;AAKA,uBAAY;AACV,gBAAI,KAAK,YAAL,IAAqB,IAAzB,EAA+B,OAAO,CAAP;AAE/B,mBAAO,KAAK,OAAL,CAAa,KAAK,YAAlB,EAAgC,QAAhC,GAA2C,MAAlD;AACD,SAxBO;AAyBR,wBAAa;AACX,gBAAI,CAAC,KAAK,WAAN,IAAqB,KAAK,QAA9B,EAAwC,OAAO,KAAK,QAAZ;AAExC,mBAAO,KAAK,QAAL,CAAc,MAAd,CAAqB,KAAK,KAAK,MAAL,CAAY,CAAZ,EAAe,KAAK,cAApB,EAAoC,KAAK,OAAL,CAAa,CAAb,CAApC,CAA1B,CAAP;AACD,SA7BO;AA8BR,wBAAgB;AACd,kBAAG;AACD,uBAAO,KAAK,UAAZ;AACD,aAHa;AAId,gBAAK,GAAL,EAAQ;AACN,qBAAK,UAAL,GAAkB,GAAlB;AAEA,qBAAK,KAAL,CAAW,oBAAX,EAAiC,GAAjC;AACD;AARa,SA9BR;AAwCR,4BAAiB;AACf,mBAAO,KAAP;AACD,SA1CO;AA2CR,kBAAO;AACL,mBAAO,KAAK,aAAL,IAAsB,KAAK,aAAL,CAAmB,MAAnB,GAA4B,CAAzD;AACD,SA7CO;AA8CR,sBAAW;AACT,gBAAI,KAAK,QAAT,EAAmB,OAAO,KAAK,aAAZ;AAEnB,mBACE,KAAK,aAAL,IACA,KAAK,cAAL,KAAwB,KAAK,OAAL,CAAa,KAAK,YAAlB,CAF1B;AAID,SArDO;AAsDR,sBAAW;AACT,gBAAI,CAAC,KAAK,SAAV,EAAqB,OAAO,KAAP;AAErB,mBAAQ,KAAK,mBAAL,GAA2B,CAA5B,IAAkC,CAAC,KAAK,UAA/C;AACD,SA1DO;AA2DR,oBAAS;AACP,mBAAO,OAAO,MAAP,CAAc,QAAQ,QAAR,CAAiB,SAAjB,CAA2B,IAA3B,CAAgC,IAAhC,CAAd,EAAqD;AAC1D,8BAAe,2BAA2B,KAAK,YAAL,IAAqB,EAAE,EAAnD,CAAuD,IAAvD,EAD4C;AAE1D,uBAAO,KAAK,WAAL,IAAoB,KAAK;AAF0B,aAArD,CAAP;AAID,SAhEO;AAiER,wBAAa;AACX,mBAAO,KAAK,cAAL,IAAuB,IAAvB,IACL,KAAK,cAAL,KAAwB,EAD1B;AAED,SApEO;AAqER,uBAAY;AACV,gBAAI,KAAK,QAAT,EAAmB,OAAO,IAAP;AAEnB,mBAAO,KAAK,aAAL,CAAmB,IAAnB,CAAwB,KAAI;AACjC,uBAAO,KAAK,eAAL,CAAqB,KAAK,QAAL,CAAc,CAAd,CAArB,EAAuC,KAAK,QAAL,CAAc,KAAK,aAAnB,CAAvC,CAAP;AACD,aAFM,CAAP;AAGD,SA3EO;AA4ER,mBAAQ;AACN,kBAAM,OAAO,QAAQ,QAAR,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,IAA/B,CAAb;AAEA,mBAAO,MAAP,CAAc,KAAK,KAAnB,EAA0B;AACxB,uBAAO,KAAK,gBADY;AAExB,0BACE,KAAK,QAAL,IACA,CAAC,KAAK,WADN,IAEA,CAAC,KAAK,aAAL,CAAmB,MALE;AAOxB,6BAAa,KAAK;AAPM,aAA1B;AAUA,mBAAO,IAAP;AACD;AA1FO,KAnDG;AAgJb,WAAO;AACL,sBAAe,GAAf,EAAkB;AAChB,iBAAK,sBAAL,CAA4B,GAA5B;AACD,SAHI;AAIL,wBAAa;AACX,iBAAK,SAAL;AACD,SANI;AAOL,kBAAW,GAAX,EAAc;AACZ,gBAAI,GAAJ,EAAS;AACP,qBAAK,KAAL,CAAW,KAAX,IACE,KAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,EADF;AAED,aAHD,MAGO;AACL,qBAAK,UAAL;AACD;AACF,SAdI;AAeL,qBAAc,GAAd,EAAiB;AACf,gBAAI,OAAO,CAAC,KAAK,OAAjB,EAA0B;AAE1B,iBAAK,UAAL,GAAkB,IAAlB;AACD,SAnBI;AAoBL,cAAO,GAAP,EAAU;AACR;AACA;AACA;AACA;AACA,gBACE,KAAK,SAAL,IACA,CAAC,KAAK,YADN,IAEA,IAAI,MAHN,EAIE,KAAK,YAAL;AACH,SA9BI;AA+BL,oBAAa,GAAb,EAAgB;AACd,iBAAK,UAAL,GAAkB,GAAlB;AACD,SAjCI;AAkCL,uBAAgB,GAAhB,EAAmB;AACjB,iBAAK,uBAAL,CAA6B,GAA7B;AACD;AApCI,KAhJM;AAuLb,cAAO;AACL,aAAK,SAAL;AACD,KAzLY;AA2Lb,aAAS;AACP,+BAAwB,GAAxB,EAA2B;AACzB,iBAAK,YAAL,CAAkB,CAAC,CAAnB;AAEA,iBAAK,SAAL,CAAe,MAAK;AAClB,qBAAK,YAAL,CAAkB,IAAI,MAAJ,KAAe,CAAf,GAAmB,CAAnB,GAAuB,CAAC,CAA1C;AACD,aAFD;AAGD,SAPM;AAQP,gCAAyB,GAAzB,EAA4B;AAC1B,iBAAK,oBAAL;AACD,SAVM;AAWP,uBAAY;AACV,gBAAI,KAAK,WAAT,EAAsB;AACpB,qBAAK,YAAL,GAAoB,IAApB;AACD;AACF,SAfM;AAgBP,+BAAoB;AAClB,gBAAI,KAAK,YAAL,IACF,KAAK,KAAL,CAAW,IADb,EAEE;AACA,qBAAK,KAAL,CAAW,IAAX,CAAgB,gBAAhB;AACD;AACF,SAtBM;AAuBP,4BAAqB,OAArB,EAA4B;AAC1B;AACA;AACA,gBAAI,KAAK,aAAT,EAAwB;AAExB,gBAAI,CAAC,CACH,SAAS,SADN,EAEH,SAAS,IAFN,EAGH,SAAS,KAHN,EAIH,SAAS,MAJN,EAKH,QALG,CAKM,OALN,CAAL,EAKqB;AAErB,kBAAM,UAAU,KAAK,aAAL,CAAmB,MAAnB,GAA4B,CAA5C;AAEA,gBAAI,YAAY,SAAS,IAAzB,EAA+B;AAC7B,qBAAK,aAAL,GAAqB,KAAK,aAAL,KAAuB,CAAC,CAAxB,GACjB,OADiB,GAEjB,KAAK,aAAL,GAAqB,CAFzB;AAGD,aAJD,MAIO,IAAI,YAAY,SAAS,KAAzB,EAAgC;AACrC,qBAAK,aAAL,GAAqB,KAAK,aAAL,IAAsB,OAAtB,GACjB,CAAC,CADgB,GAEjB,KAAK,aAAL,GAAqB,CAFzB;AAGD,aAJM,MAIA,IAAI,KAAK,aAAL,KAAuB,CAAC,CAA5B,EAA+B;AACpC,qBAAK,aAAL,GAAqB,OAArB;AACA;AACD;AAED,kBAAM,cAAc,KAAK,aAAL,CAAmB,KAAK,aAAxB,CAApB;AAEA,gBAAI,CACF,SAAS,SADP,EAEF,SAAS,MAFP,EAGF,QAHE,CAGO,OAHP,KAIF,CAAC,KAAK,WAAL,CAAiB,WAAjB,CAJH,EAKE;AACA,sBAAM,WAAW,KAAK,aAAL,KAAuB,OAAvB,GACb,KAAK,aAAL,GAAqB,CADR,GAEb,KAAK,aAAL,CAAmB,KAAK,aAAL,GAAqB,CAAxC,IACE,KAAK,aADP,GAEE,CAAC,CAJP;AAMA,oBAAI,aAAa,CAAC,CAAlB,EAAqB;AACnB,yBAAK,aAAL,GAAqB,KAAK,QAAL,GAAgB,EAAhB,GAAqB,SAA1C;AACD,iBAFD,MAEO;AACL,yBAAK,UAAL,CAAgB,WAAhB;AACD;AAED,qBAAK,aAAL,GAAqB,QAArB;AACD;AACF,SAxEM;AAyEP,4BAAiB;AACf,iBAAK,cAAL,GAAsB,SAAtB;AAEA,oBAAQ,OAAR,CAAgB,iBAAhB,CAAkC,IAAlC,CAAuC,IAAvC;AACD,SA7EM;AA8EP,mBAAQ;AACN,kBAAM,QAAQ,WAAW,OAAX,CAAmB,QAAnB,CAA4B,IAA5B,CAAiC,IAAjC,CAAd;AAEA,kBAAM,IAAN,CAAW,KAAX,CAAiB,IAAjB,GAAwB,UAAxB;AACA,kBAAM,IAAN,CAAW,QAAX,CAAoB,KAApB,GAA4B,KAAK,cAAjC;AAEA,mBAAO,KAAP;AACD,SArFM;AAsFP,wBAAa;AACX,mBAAO,KAAK,OAAL,IAAgB,KAAK,QAArB,GACH,QAAQ,OAAR,CAAgB,aAAhB,CAA8B,IAA9B,CAAmC,IAAnC,CADG,GAEH,EAFJ;AAGD,SA1FM;AA2FP,kBAAO;AACL,gBAAI,KAAK,UAAT,EAAqB;AAErB,iBAAK,aAAL,GAAqB,CAAC,CAAtB,GACK,KAAK,aAAL,GAAqB,CAAC,CAD3B,GAEI,KAAK,OAAL,EAFJ;AAIA,iBAAK,YAAL;AACD,SAnGM;AAoGP,sBAAW;AACT;AACA;AACA;AACD,SAxGM;AAyGP,gBAAS,CAAT,EAAU;AACR,gBAAI,KAAK,aAAL,GAAqB,CAAC,CAA1B,EAA6B;AAE7B;AACA,gBAAI,EAAE,MAAF,CAAS,KAAb,EAAoB;AAClB,qBAAK,YAAL;AACA,oBAAI,CAAC,KAAK,iBAAV,EAA6B,KAAK,YAAL,CAAkB,CAAlB;AAC9B;AAED,iBAAK,IAAL,IAAa,KAAK,eAAL,CAAqB,EAAE,MAAvB,CAAb;AACA,iBAAK,cAAL,GAAsB,EAAE,MAAF,CAAS,KAA/B;AACA,iBAAK,QAAL,GAAgB,EAAE,MAAF,CAAS,QAAT,IAAqB,EAAE,MAAF,CAAS,QAAT,CAAkB,QAAvD;AACD,SArHM;AAsHP,kBAAW,CAAX,EAAY;AACV,kBAAM,UAAU,EAAE,OAAlB;AAEA,oBAAQ,OAAR,CAAgB,SAAhB,CAA0B,IAA1B,CAA+B,IAA/B,EAAqC,CAArC;AAEA;AACA;AACA;AACA;AACA,iBAAK,mBAAL,CAAyB,OAAzB;AACD,SAhIM;AAiIP,kBAAW,CAAX,EAAY;AACV,oBAAQ,OAAR,CAAgB,SAAhB,CAA0B,IAA1B,CAA+B,IAA/B,EAAqC,CAArC;AACA,iBAAK,UAAL;AACD,SApIM;AAqIP,mBAAY,IAAZ,EAAgB;AACd,oBAAQ,OAAR,CAAgB,UAAhB,CAA2B,IAA3B,CAAgC,IAAhC,EAAsC,IAAtC;AAEA,iBAAK,SAAL;AACD,SAzIM;AA0IP,2BAAgB;AACd,oBAAQ,OAAR,CAAgB,gBAAhB,CAAiC,IAAjC,CAAsC,IAAtC;AAEA;AACA;AACA,gBAAI,CAAC,KAAK,SAAV,EAAqB,KAAK,SAAL;AACtB,SAhJM;AAiJP,oBAAS;AACP;AACA;AACA,iBAAK,SAAL,CAAe,MAAK;AAClB,qBAAK,cAAL,GACE,CAAC,KAAK,YAAN,IACA,KAAK,QADL,IAEA,KAAK,OAHe,GAKlB,IALkB,GAMlB,KAAK,OAAL,CAAa,KAAK,YAAlB,CANJ;AAOD,aARD;AASD,SA7JM;AA8JP,mBAAQ;AACN,iBAAK,aAAL,GAAqB,KAAK,cAA1B;AACA,iBAAK,KAAL,CAAW,QAAX,EAAqB,KAAK,cAA1B;AACD,SAjKM;AAkKP,qBAAU;AACR,iBAAK,kBAAL;AACD,SApKM;AAqKP,6BAAkB;AAChB,gBAAI,CAAC,KAAK,aAAN,IACF,CAAC,KAAK,aADR,EAEE;AAEF,gBAAI,CAAC,KAAK,eAAL,CACH,KAAK,cADF,EAEH,KAAK,QAAL,CAAc,KAAK,aAAnB,CAFG,CAAL,EAGG;AACD,qBAAK,SAAL;AACD;AACF;AAhLM;AA3LI,CAAf","sourcesContent":["// Styles\nimport '../../stylus/components/_autocompletes.styl'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n/* @vue/component */\nexport default {\n  name: 'v-autocomplete',\n\n  extends: VSelect,\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    browserAutocomplete: {\n      type: String,\n      default: 'off'\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        const hasValue = val => val != null ? val : ''\n\n        const text = hasValue(itemText)\n        const query = hasValue(queryText)\n\n        return text.toString()\n          .toLowerCase()\n          .indexOf(query.toString().toLowerCase()) > -1\n      }\n    },\n    hideNoData: Boolean,\n    noFilter: Boolean,\n    offsetY: {\n      type: Boolean,\n      default: true\n    },\n    offsetOverflow: {\n      type: Boolean,\n      default: true\n    },\n    searchInput: {\n      default: undefined\n    },\n    transition: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n\n  data: vm => ({\n    attrsInput: null,\n    lazySearch: vm.searchInput\n  }),\n\n  computed: {\n    classes () {\n      return Object.assign({}, VSelect.computed.classes.call(this), {\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      })\n    },\n    computedItems () {\n      return this.filteredItems\n    },\n    displayedItemsCount () {\n      return this.hideSelected\n        ? this.filteredItems.length - this.selectedItems.length\n        : this.filteredItems.length\n    },\n    /**\n     * The range of the current input text\n     *\n     * @return {Number}\n     */\n    currentRange () {\n      if (this.selectedItem == null) return 0\n\n      return this.getText(this.selectedItem).toString().length\n    },\n    filteredItems () {\n      if (!this.isSearching || this.noFilter) return this.allItems\n\n      return this.allItems.filter(i => this.filter(i, this.internalSearch, this.getText(i)))\n    },\n    internalSearch: {\n      get () {\n        return this.lazySearch\n      },\n      set (val) {\n        this.lazySearch = val\n\n        this.$emit('update:searchInput', val)\n      }\n    },\n    isAnyValueAllowed () {\n      return false\n    },\n    isDirty () {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching () {\n      if (this.multiple) return this.searchIsDirty\n\n      return (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow () {\n      if (!this.isFocused) return false\n\n      return (this.displayedItemsCount > 0) || !this.hideNoData\n    },\n    menuProps () {\n      return Object.assign(VSelect.computed.menuProps.call(this), {\n        contentClass: (`v-autocomplete__content ${this.contentClass || ''}`).trim(),\n        value: this.menuCanShow && this.isMenuActive\n      })\n    },\n    searchIsDirty () {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem () {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.computed.listData.call(this)\n\n      Object.assign(data.props, {\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch\n      })\n\n      return data\n    }\n  },\n\n  watch: {\n    filteredItems (val) {\n      this.onFilteredItemsChanged(val)\n    },\n    internalValue () {\n      this.setSearch()\n    },\n    isFocused (val) {\n      if (val) {\n        this.$refs.input &&\n          this.$refs.input.select()\n      } else {\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val) {\n      // If we are focused, the menu\n      // is not active and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val) {\n      this.lazySearch = val\n    },\n    internalSearch (val) {\n      this.onInternalSearchChanged(val)\n    }\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  methods: {\n    onFilteredItemsChanged (val) {\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        this.setMenuIndex(val.length === 1 ? 0 : -1)\n      })\n    },\n    onInternalSearchChanged (val) {\n      this.updateMenuDimensions()\n    },\n    activateMenu () {\n      if (this.menuCanShow) {\n        this.isMenuActive = true\n      }\n    },\n    updateMenuDimensions () {\n      if (this.isMenuActive &&\n        this.$refs.menu\n      ) {\n        this.$refs.menu.updateDimensions()\n      }\n    },\n    changeSelectedIndex (keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (![\n        keyCodes.backspace,\n        keyCodes.left,\n        keyCodes.right,\n        keyCodes.delete\n      ].includes(keyCode)) return\n\n      const indexes = this.selectedItems.length - 1\n\n      if (keyCode === keyCodes.left) {\n        this.selectedIndex = this.selectedIndex === -1\n          ? indexes\n          : this.selectedIndex - 1\n      } else if (keyCode === keyCodes.right) {\n        this.selectedIndex = this.selectedIndex >= indexes\n          ? -1\n          : this.selectedIndex + 1\n      } else if (this.selectedIndex === -1) {\n        this.selectedIndex = indexes\n        return\n      }\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n\n      if ([\n        keyCodes.backspace,\n        keyCodes.delete\n      ].includes(keyCode) &&\n        !this.getDisabled(currentItem)\n      ) {\n        const newIndex = this.selectedIndex === indexes\n          ? this.selectedIndex - 1\n          : this.selectedItems[this.selectedIndex + 1]\n            ? this.selectedIndex\n            : -1\n\n        if (newIndex === -1) {\n          this.internalValue = this.multiple ? [] : undefined\n        } else {\n          this.selectItem(currentItem)\n        }\n\n        this.selectedIndex = newIndex\n      }\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.methods.genInput.call(this)\n\n      input.data.attrs.role = 'combobox'\n      input.data.domProps.value = this.internalSearch\n\n      return input\n    },\n    genSelections () {\n      return this.hasSlot || this.multiple\n        ? VSelect.methods.genSelections.call(this)\n        : []\n    },\n    onClick () {\n      if (this.isDisabled) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      this.activateMenu()\n    },\n    onEnterDown () {\n      // Avoid invoking this method\n      // will cause updateSelf to\n      // be called emptying search\n    },\n    onInput (e) {\n      if (this.selectedIndex > -1) return\n\n      // If typing and menu is not currently active\n      if (e.target.value) {\n        this.activateMenu()\n        if (!this.isAnyValueAllowed) this.setMenuIndex(0)\n      }\n\n      this.mask && this.resetSelections(e.target)\n      this.internalSearch = e.target.value\n      this.badInput = e.target.validity && e.target.validity.badInput\n    },\n    onKeyDown (e) {\n      const keyCode = e.keyCode\n\n      VSelect.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e) {\n      VSelect.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    selectItem (item) {\n      VSelect.methods.selectItem.call(this, item)\n\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        this.internalSearch = (\n          !this.selectedItem ||\n          this.multiple ||\n          this.hasSlot\n        )\n          ? null\n          : this.getText(this.selectedItem)\n      })\n    },\n    setValue () {\n      this.internalValue = this.internalSearch\n      this.$emit('change', this.internalSearch)\n    },\n    updateSelf () {\n      this.updateAutocomplete()\n    },\n    updateAutocomplete () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    }\n  }\n}\n"],"sourceRoot":""}