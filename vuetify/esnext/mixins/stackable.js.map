{"version":3,"sources":["../../src/mixins/stackable.js"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,iBAA1B;AAEA;AACA,eAAe;AACb,UAAM,WADO;AAGb,WAAI;AACF,eAAO;AACL,uBAAW,IADN;AAEL,wBAAY,YAFP;AAGL,0BAAc,IAHT;AAIL,0BAAc,IAJT;AAKL,4BAAgB;AALX,SAAP;AAOD,KAXY;AAYb,cAAU;AACR;;;;;AAKA,uBAAY;AACV,gBAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC,OAAO,CAAP;AAEnC,kBAAM,UAAU,KAAK,YAAL,IAAqB,KAAK,KAAL,CAAW,OAAhD;AACA;AAEA,kBAAM,QAAQ,CAAC,KAAK,QAAN,GACV,UAAU,OAAV,CADU,GAEV,KAAK,YAAL,CAAkB,KAAK,YAAL,IAAqB,CAAC,OAAD,CAAvC,IAAoD,CAFxD;AAIA,gBAAI,SAAS,IAAb,EAAmB,OAAO,KAAP;AAEnB;AACA;AACA,mBAAO,SAAS,KAAT,CAAP;AACD;AArBO,KAZG;AAmCb,aAAS;AACP,qBAAc,UAAU,EAAxB,EAA0B;AACxB,kBAAM,OAAO,KAAK,SAAL,IAAkB,KAAK,GAApC;AACA;AACA;AACA,kBAAM,MAAM,CAAC,KAAK,cAAN,EAAsB,UAAU,IAAV,CAAtB,CAAZ;AACA;AACA;AACA;AACA,kBAAM,iBAAiB,CAAC,GAAG,SAAS,sBAAT,CAAgC,KAAK,UAArC,CAAJ,CAAvB;AAEA;AACA,iBAAK,IAAI,QAAQ,CAAjB,EAAoB,QAAQ,eAAe,MAA3C,EAAmD,OAAnD,EAA4D;AAC1D,oBAAI,CAAC,QAAQ,QAAR,CAAiB,eAAe,KAAf,CAAjB,CAAL,EAA8C;AAC5C,wBAAI,IAAJ,CAAS,UAAU,eAAe,KAAf,CAAV,CAAT;AACD;AACF;AAED,mBAAO,KAAK,GAAL,CAAS,GAAG,GAAZ,CAAP;AACD;AAnBM;AAnCI,CAAf","sourcesContent":["import { getZIndex } from '../util/helpers'\n\n/* @vue/component */\nexport default {\n  name: 'stackable',\n\n  data () {\n    return {\n      stackBase: null,\n      stackClass: 'unpecified',\n      stackElement: null,\n      stackExclude: null,\n      stackMinZIndex: 0\n    }\n  },\n  computed: {\n    /**\n     * Currently active z-index\n     *\n     * @return {number}\n     */\n    activeZIndex () {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    }\n  },\n  methods: {\n    getMaxZIndex (exclude = []) {\n      const base = this.stackBase || this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [...document.getElementsByClassName(this.stackClass)]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    }\n  }\n}\n"],"sourceRoot":""}