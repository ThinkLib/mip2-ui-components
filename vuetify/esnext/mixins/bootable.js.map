{"version":3,"sources":["../../src/mixins/bootable.ts"],"names":[],"mappings":"AAAA,OAAO,GAAP,MAA2B,KAA3B;AAIA;;;;;;;;AAQA;AACA,eAAe,IAAI,MAAJ,GAAqC,MAArC,CAA4C;AACzD,UAAM,UADmD;AAGzD,WAAO;AACL,cAAM;AADD,KAHkD;AAOzD,UAAM,OAAO;AACX,kBAAU;AADC,KAAP,CAPmD;AAWzD,cAAU;AACR,qBAAU;AACR,mBAAO,KAAK,QAAL,IAAiB,CAAC,KAAK,IAAvB,IAA+B,KAAK,QAA3C;AACD;AAHO,KAX+C;AAiBzD,WAAO;AACL,mBAAQ;AACN,iBAAK,QAAL,GAAgB,IAAhB;AACD;AAHI,KAjBkD;AAuBzD,aAAS;AACP,wBAAiB,OAAjB,EAAiC;AAC/B,mBAAO,KAAK,UAAL,GAAkB,OAAlB,GAA4B,SAAnC;AACD;AAHM;AAvBgD,CAA5C,CAAf","sourcesContent":["import Vue, { VNode } from 'vue'\nimport { Toggleable } from './toggleable'\nimport { ExtractVue } from '../util/mixins'\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<ExtractVue<Toggleable>>().extend({\n  name: 'bootable',\n\n  props: {\n    lazy: Boolean\n  },\n\n  data: () => ({\n    isBooted: false\n  }),\n\n  computed: {\n    hasContent (): boolean {\n      return this.isBooted || !this.lazy || this.isActive\n    }\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    }\n  },\n\n  methods: {\n    showLazyContent (content: VNode[]): VNode[] | undefined {\n      return this.hasContent ? content : undefined\n    }\n  }\n})\n"],"sourceRoot":""}